// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SegundoRegistro.DAL;

namespace SegundoRegistro.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211108163828_Migracion_Inicial")]
    partial class Migracion_Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("SegundoRegistro.Entidades.Aportes", b =>
                {
                    b.Property<int>("AporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Concepto")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<int>("Monto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AporteId");

                    b.ToTable("Aportes");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.AportesDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AporteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DetalleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Monto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AporteId");

                    b.HasIndex("DetalleId");

                    b.ToTable("AportesDetalle");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.Rol", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.HasKey("RolID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.RolesDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsAsignado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermisoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RolId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("RolesDetalle");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alias")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AporteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<int>("RolID")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioID");

                    b.HasIndex("AporteId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioID = 1,
                            Activo = 0,
                            Clave = "03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4",
                            Email = "user01",
                            FechaIngreso = new DateTime(2021, 11, 8, 12, 38, 28, 165, DateTimeKind.Local).AddTicks(8803),
                            Nombre = "Danilo Gabriel B.",
                            RolID = 0
                        });
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.AportesDetalle", b =>
                {
                    b.HasOne("SegundoRegistro.Entidades.Aportes", null)
                        .WithMany("Detalle")
                        .HasForeignKey("AporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SegundoRegistro.Entidades.Aportes", "Aportes")
                        .WithMany()
                        .HasForeignKey("DetalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aportes");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.RolesDetalle", b =>
                {
                    b.HasOne("SegundoRegistro.Entidades.Rol", null)
                        .WithMany("RolesDetalles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.Usuario", b =>
                {
                    b.HasOne("SegundoRegistro.Entidades.Aportes", "Aporte")
                        .WithMany()
                        .HasForeignKey("AporteId");

                    b.Navigation("Aporte");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.Aportes", b =>
                {
                    b.Navigation("Detalle");
                });

            modelBuilder.Entity("SegundoRegistro.Entidades.Rol", b =>
                {
                    b.Navigation("RolesDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
